services:
  nginx:
    image: nginx:latest
    container_name: nginx
    networks:
      - variables_ultra_test_internal_net
    depends_on:
      - api
      - postgres
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/stream.d:/etc/nginx/stream.d
      - ../certs:/etc/ssl/certs

  proxy:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: proxy
    networks:
      - variables_ultra_test_internal_net
    volumes:
      - ../secrets/tunnel_ssh_key:/root/.ssh/id_ed25519
      - ../secrets/proxy_known_hosts:/root/.ssh/known_hosts
      - ./proxy-entrypoint.sh:/root/proxy-entrypoint.sh
    tty: true
    stdin_open: true
    entrypoint: ["/root/proxy-entrypoint.sh"]
    command: ["-p", "22", "root@tunnel.vu.bppleman.com"]

  api:
    image: mcr.microsoft.com/openjdk/jdk:21-ubuntu
    container_name: api
    depends_on:
      - postgres
    networks:
      - variables_ultra_test_internal_net
    volumes:
      - ./app/app.jar:/root/app.jar
    env_file:
      - app/test.env
    stdin_open: true
    tty: true
    entrypoint: ["java", "-jar", "/root/app.jar"]

  postgres:
    image: postgres:16.3
    container_name: test-postgres
    networks:
      - variables_ultra_test_internal_net
    environment:
      - POSTGRES_DB=${VARIABLES_ULTRA_POSTGRES_DB}
      - POSTGRES_USER=${VARIABLES_ULTRA_POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${VARIABLES_ULTRA_POSTGRES_PASSWORD}

#  tunnel-gateway:
#    image: nginx:latest
#    container_name: tunnel-gateway
#    ports:
#      - "443:443"
#      - "5432:5432"
#    volumes:
#      - ./tunnel-nginx:/etc/nginx
#      - ../certs:/etc/ssl/certs
#    networks:
#      - variables_ultra_test_internal_net
#
#  tunnel:
#    build:
#      context: ../../ssh_tunnel
#      dockerfile: Dockerfile
#    container_name: tunnel
#    networks:
#      - variables_ultra_test_internal_net

networks:
  variables_ultra_test_internal_net:
    driver: bridge
